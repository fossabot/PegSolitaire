var i,j,k,playerPosition,board=document.getElementById("boardContainerID"),textContainer=document.getElementById("textContainerID"),boardSize=7,nMoves=0,lifeTime=1e3,sleepTime=100,nExperiments=1,avgMoves=0,avgPegsRemaining=0,starsId="starsCSS",wavesId="wavesCSS",boardHistory=[],boardState="";const startingState="111111111111111101111111111111111";var InitializeBoard=()=>{for(i=0;i<boardSize;++i){var row=document.createElement("div");for(row.setAttribute("id","rowID"),row.className="row",j=0;j<boardSize;++j){var cell=document.createElement("div");cell.setAttribute("id",""+i+j),cell.className="cell",row.appendChild(cell)}board.appendChild(row)}for(i=0;i<boardSize;++i)for(j=0;j<boardSize;++j){var peg;i==Math.floor(boardSize/2)&&j==Math.floor(boardSize/2)||((peg=document.createElement("span")).className="peg",document.getElementById(""+i+j).appendChild(peg))}},GetValidMoves=playerPosition=>{if(!InsideBoard(playerPosition))return[];if(IsEmpty(playerPosition))return[];var playerUp=Add(playerPosition,[-2,0]),playerDown=Add(playerPosition,[2,0]),playerLeft=Add(playerPosition,[0,-2]),playerPosition=Add(playerPosition,[0,2]);let validMoves=[];var tempMoves=[];return tempMoves.push(playerUp,playerDown,playerLeft,playerPosition),tempMoves.forEach(move=>{InsideBoard(move)&&IsEmpty(move)&&validMoves.push(move)}),validMoves},MovePeg=(startPos,endPos)=>{let movePerformed=!1;return GetValidMoves(startPos).forEach(move=>{move[0]===endPos[0]&&move[1]===endPos[1]&&(RemovePeg(endPos),RemovePeg(startPos),RemovePeg(FindBetweenPeg(startPos,endPos)),(move=document.createElement("span")).className="movedPeg",document.getElementById(""+endPos[0]+endPos[1]).appendChild(move),movePerformed=!0,nMoves++,UpdateStats())}),movePerformed},Add=(a,b)=>[a[0]+b[0],a[1]+b[1]],Equal=(a,b)=>a[0]==b[0]&&a[1]==b[1],InsideBoard=position=>!(position[0]<0||6<position[0]||position[1]<0||6<position[1]||(position[0]<2&&position[1]<2||position[0]<2&&4<position[1]||4<position[0]&&position[1]<2||4<position[0]&&4<position[1])),IsEmpty=position=>!document.getElementById(""+position[0]+position[1]).hasChildNodes(),RemovePeg=position=>{position=document.getElementById(""+position[0]+position[1]);position.firstChild&&position.removeChild(position.firstChild)},FindBetweenPeg=(startingPos,EndPos)=>startingPos[0]===EndPos[0]&&startingPos[1]<EndPos[1]?[startingPos[0],startingPos[1]+1]:startingPos[0]===EndPos[0]&&startingPos[1]>EndPos[1]?[startingPos[0],startingPos[1]-1]:startingPos[1]===EndPos[1]&&startingPos[0]<EndPos[0]?[startingPos[0]+1,startingPos[1]]:startingPos[1]===EndPos[1]&&startingPos[0]>EndPos[0]?[startingPos[0]-1,startingPos[1]]:void 0,MoveablePegsActual=()=>{let moveablePegs=new Set;var allowedMoves=AllowedMoves();let moveablePegsList=[];return allowedMoves.forEach(([source])=>{moveablePegs.add(""+source[0]+source[1])}),moveablePegs.forEach(move=>{moveablePegsList.push([Number(move[0]),Number(move[1])])}),moveablePegsList},MoveablePegs=()=>{var moveablePegs=[];for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j)GetValidMoves([i,j]).length&&moveablePegs.push([i,j]);return moveablePegs},AllowedMoves=()=>{let allowedMoves=[];return MoveablePegs().forEach(startPos=>{GetValidMoves(startPos).forEach(endPos=>{IsEmpty(FindBetweenPeg(startPos,endPos))||allowedMoves.push([startPos,endPos])})}),allowedMoves},RandomMove=()=>{var allowedMoves=AllowedMoves();allowedMoves.length&&(allowedMoves=allowedMoves[Math.floor(Math.random()*allowedMoves.length)],MovePeg(allowedMoves[0],allowedMoves[1]))},IntelligentMove=heuristic=>{var allowedMoves=AllowedMoves();allowedMoves.length&&(heuristic=heuristic(allowedMoves),MovePeg(heuristic[0],heuristic[1]))},EmptyPegs=()=>{let count=0;for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j)InsideBoard([i,j])&&IsEmpty([i,j])&&count++;return count},ClearCells=()=>{for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j)document.getElementById(""+i+j).className="cell"},ClearListeners=()=>{for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j){var lastMove=document.getElementById(""+i+j).firstChild;lastMove&&"movedPeg"===lastMove.className&&(lastMove.className="peg")}board.innerHTML=board.innerHTML},UpdateStats=()=>{textContainer.textContent=`
  ${nMoves} move(s) done 

  Pegs Remaining :  ${33-EmptyPegs()}
  `},UpdateReport=()=>{textContainer.textContent=`
  Report
  Strategy : Greedy with Random Moves
  Number of Experiments : ${nExperiments}
  Average Moves per experiment : ${avgMoves/nExperiments}
  Average No of Pegs remaining : ${avgPegsRemaining/nExperiments}
  `};const sleep=ms=>new Promise(r=>setTimeout(r,ms));var ResetBoard=()=>{nMoves=0,board.replaceChildren(),InitializeBoard()},RunGame=async()=>{for(k=0;k<lifeTime&&AllowedMoves().length;k++)RandomMove(),await sleep(sleepTime)},RunExperiment=async days=>{if("Random Agent running"!==document.getElementById("status").textContent){document.getElementById("status").textContent="Random Agent running",nExperiments=days,avgPegsRemaining=avgMoves=0,ResetBoard();for(let k=0;k<nExperiments;++k)ResetBoard(),await RunGame(),avgMoves+=nMoves,avgPegsRemaining+=33-EmptyPegs();UpdateReport(),document.getElementById("status").textContent="Idle"}},InitThemeSwitch=()=>{var userPrefersDark=window.matchMedia("(prefers-color-scheme: dark)")["matches"],userPrefersDark=localStorage.getItem("theme")?localStorage.getItem("theme"):userPrefersDark?"dark":"light",toggle=(document.body.className="dark"===userPrefersDark?"dark-mode":"",localStorage.setItem("theme",userPrefersDark),HandleThemeCSSLoading(userPrefersDark),document.getElementById("toggleInputID"));toggle.checked="dark"===userPrefersDark,toggle.addEventListener("change",e=>{e=e.target.checked?"dark":"light";document.body.className="dark"==e?"dark-mode":"",localStorage.setItem("theme",e),HandleThemeCSSLoading(e)})},LoadStars=()=>{var head,link;document.getElementById(starsId)||(head=document.getElementsByTagName("head")[0],(link=document.createElement("link")).id=starsId,link.rel="stylesheet",link.type="text/css",link.href="stars.css",link.media="all",head.appendChild(link))},RemoveStars=()=>{document.getElementById(starsId)?.remove()},LoadWaves=()=>{var head,link;document.getElementById(wavesId)||(head=document.getElementsByTagName("head")[0],(link=document.createElement("link")).id=wavesId,link.rel="stylesheet",link.type="text/css",link.href="waves.css",link.media="all",head.appendChild(link))},RemoveWaves=()=>{document.getElementById(wavesId)?.remove()},HandleThemeCSSLoading=theme=>{("dark"===theme?(RemoveWaves(),LoadStars):(RemoveStars(),LoadWaves))()},GetBoardState=()=>{let state="";for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j)InsideBoard([i,j])&&(state+=IsEmpty([i,j])?"0":"1");return state},SetBoardState=state=>{for(board.replaceChildren(),i=0;i<boardSize;++i){var row=document.createElement("div");for(row.setAttribute("id","rowID"),row.className="row",j=0;j<boardSize;++j){var cell=document.createElement("div");cell.setAttribute("id",""+i+j),cell.className="cell",row.appendChild(cell)}board.appendChild(row)}let counter=0;for(let i=0;i<boardSize;++i)for(let j=0;j<boardSize;++j){var peg;InsideBoard([i,j])&&("1"==state[counter]&&((peg=document.createElement("span")).className="peg",document.getElementById(""+i+j).appendChild(peg)),counter++)}},UndoMove=()=>{1<boardHistory.length&&(SetBoardState(boardHistory.at(-2)),boardHistory.pop(),userMoves--,PrepareSourceInput())},sourcePeg=(InitThemeSwitch(),InitializeBoard(),textContainer.textContent=`
  Welcome to Peg Solitaire ! 

  Click on the buttons below to start
`,boardHistory.push(startingState),[-1,-1]),userMoves=0,ManualMode=()=>{ResetBoard(),document.getElementById("status").textContent="Manual Mode",PrepareSourceInput()},PrepareSourceInput=()=>{ClearListeners();const abortSourceControllers=new AbortController;AllowedMoves().length?(textContainer.textContent=`
      ${userMoves} moves done
      ${AllowedMoves().length} legal moves can be performed 
    `,MoveablePegsActual().forEach(peg=>{document.getElementById(""+peg[0]+peg[1]).firstChild.className="moveablePeg",document.getElementById(""+peg[0]+peg[1]).addEventListener("click",function(){document.getElementById(""+peg[0]+peg[1]).firstChild.className="selectedPeg",sourcePeg=[peg[0],peg[1]],MoveablePegsActual().forEach(remainingPeg=>{Equal(peg,remainingPeg)||(document.getElementById(""+remainingPeg[0]+remainingPeg[1]).firstChild.className="peg")}),abortSourceControllers.abort(),PrepareDestinationInput()})})):(32==EmptyPegs()?(textContainer.textContent=` 
    Completed Successfully ! 

    ${userMoves} move(s) done
    `,document.getElementById("celebrations").style.display=""):textContainer.textContent=` 
      Finished
      ${userMoves} move(s) done 

      Pegs Remaining :  ${33-EmptyPegs()}
      `,document.getElementById("status").textContent="Idle",(boardHistory=[]).push(startingState))},PrepareDestinationInput=()=>{ClearListeners();const abortDestinationControllers=new AbortController;var allowedMoves=AllowedMoves();let allowedDestinations=new Set;allowedMoves.forEach(([source,destination])=>{Equal(sourcePeg,source)&&allowedDestinations.add(""+destination[0]+destination[1])}),allowedDestinations.forEach(destination=>{document.getElementById(""+destination[0]+destination[1]).addEventListener("click",function(){RemovePeg(sourcePeg),RemovePeg([Number(destination[0]),Number(destination[1])]),RemovePeg(FindBetweenPeg(sourcePeg,[Number(destination[0]),Number(destination[1])])),ClearCells();var peg=document.createElement("span");peg.className="movedPeg",document.getElementById(""+destination[0]+destination[1]).appendChild(peg),userMoves++,boardHistory.push(GetBoardState()),abortDestinationControllers.abort(),PrepareSourceInput()},{signal:abortDestinationControllers.signal}),document.getElementById(""+destination[0]+destination[1]).className="allowedCell"}),document.getElementById(""+sourcePeg[0]+sourcePeg[1]).addEventListener("click",function(){ClearCells(),abortDestinationControllers.abort(),PrepareSourceInput()})},FullReset=()=>{"Idle"===document.getElementById("status").textContent||"Manual Mode"===document.getElementById("status").textContent?(sourcePeg=[-1,-1],userMoves=0,ResetBoard(),textContainer.textContent=`
  Welcome to Peg Solitaire ! 

  Click on the buttons below to start
    `,document.getElementById("status").textContent="Idle",(boardHistory=[]).push(startingState)):window.location.reload()};